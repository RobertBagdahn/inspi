# Generated by Django 5.1.7 on 2025-04-17 12:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('basic', '0001_initial'),
        ('group', '0015_alter_inspigroupnews_message'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='event',
            name='name',
            field=models.CharField(max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='slug',
            field=models.CharField(blank=True, max_length=20, null=True, unique=True),
        ),
        migrations.CreateModel(
            name='EventPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('permission_type', models.CharField(choices=[('view', 'View Event Invitation'), ('view_non_privacy', 'View Non-Privacy Data'), ('view_all', 'View All Data (Including Privacy)'), ('edit', 'Edit Event')], default='view', max_length=20)),
                ('include_subgroups', models.BooleanField(default=True, help_text='If checked, all child groups will also have this permission')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_permissions', to='group.inspigroup')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_permissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Event Permission',
                'verbose_name_plural': 'Event Permissions',
            },
        ),
        migrations.AddField(
            model_name='event',
            name='permissions',
            field=models.ManyToManyField(blank=True, related_name='events', to='basic.eventpermission'),
        ),
        migrations.AddConstraint(
            model_name='eventpermission',
            constraint=models.CheckConstraint(condition=models.Q(('user__isnull', False), ('group__isnull', False), _connector='OR'), name='event_permission_user_or_group_required'),
        ),
    ]
