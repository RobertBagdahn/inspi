# Generated by Django 5.0.6 on 2024-11-10 21:12

import ckeditor.fields
import django.core.validators
import django.db.models.deletion
import image_cropping.fields
import imagekit.models.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityTypeChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('sorting', models.IntegerField(null=True, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('age_level', models.IntegerField(null=True)),
                ('group_type', models.IntegerField(null=True)),
                ('group_leader', models.IntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LocationChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('sorting', models.IntegerField(null=True, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar_thumbnail', imagekit.models.fields.ProcessedImageField(upload_to='avatars')),
            ],
        ),
        migrations.CreateModel(
            name='ScoutLevelChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('sorting', models.IntegerField(null=True, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TagCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('sorting', models.IntegerField(unique=True)),
                ('icon', models.CharField(blank=True, max_length=20, null=True)),
                ('is_header', models.BooleanField(default=False)),
                ('is_mandatory', models.BooleanField(default=False)),
                ('is_activity_overview', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TimeChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('sorting', models.IntegerField(null=True, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('sorting', models.IntegerField(null=True, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('title', models.CharField(default='', max_length=45, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(45)])),
                ('summary', models.CharField(default='', max_length=300, validators=[django.core.validators.MaxLengthValidator(300)])),
                ('description', ckeditor.fields.RichTextField(default='', max_length=8000, validators=[django.core.validators.MaxLengthValidator(8000)])),
                ('costs_rating', models.CharField(choices=[('1', '0 €'), ('2', '0,50 €'), ('3', '1,00 €'), ('4', '2,00 €'), ('5', 'mehr als 2,00 €')], default='1', max_length=20)),
                ('execution_time', models.CharField(choices=[('1', '<30 min'), ('2', '30 min'), ('3', '60 min'), ('4', '90 min'), ('5', 'mehr als 90 min')], default='1', max_length=20)),
                ('preparation_time', models.CharField(choices=[('1', 'keine'), ('2', '5 min'), ('3', '30 min'), ('4', '60 min'), ('5', 'mehr als 60 min')], default='1', max_length=20)),
                ('difficulty', models.CharField(choices=[('1', 'Einfach'), ('2', 'Mittel'), ('3', 'Schwer')], default='1', max_length=20)),
                ('created_by_name', models.CharField(blank=True, max_length=60)),
                ('created_by_email', models.CharField(blank=True, max_length=60)),
                ('status', models.CharField(choices=[('1', 'Entwurf'), ('2', 'Veröffentlicht'), ('3', 'Achiviert (Unveröffentlicht)'), ('4', 'Review Angefordert')], default='1', max_length=20)),
                ('like_score', models.IntegerField(default=0)),
                ('view_count', models.IntegerField(default=0)),
                ('image', models.ImageField(blank=True, upload_to='static/activity/uploaded_images')),
                ('cropping', image_cropping.fields.ImageRatioField('image', '400x400', adapt_rotation=False, allow_fullsize=False, free_crop=False, help_text=None, hide_image_field=False, size_warning=False, verbose_name='cropping')),
                ('authors', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('activity_types', models.ManyToManyField(default='', to='activity.activitytypechoice')),
                ('locations', models.ManyToManyField(default='', to='activity.locationchoice')),
                ('scout_levels', models.ManyToManyField(default='', to='activity.scoutlevelchoice')),
                ('times', models.ManyToManyField(default='', to='activity.timechoice')),
                ('topics', models.ManyToManyField(default='', to='activity.topic')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityOfTheWeek',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('comment', models.CharField(blank=True, max_length=2000, null=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activity.activity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', ckeditor.fields.RichTextField(default='', max_length=8000)),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activity.activity')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author_actvity', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies_actvity', to='activity.comment')),
            ],
            options={
                'ordering': ['-date_posted'],
            },
        ),
        migrations.CreateModel(
            name='ExperimentItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('score', models.IntegerField(null=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activity.activity')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activity.experiment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('opinion_type_id', models.IntegerField(choices=[(1, 'Like'), (-1, 'Dislike')], default=1)),
                ('like_created', models.DateTimeField(auto_now_add=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activity.activity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('unit_detaults', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='activity.materialunit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('quantity', models.IntegerField(default=0)),
                ('number_of_participants', models.IntegerField(blank=True, default=0)),
                ('activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='material_list', to='activity.activity')),
                ('material_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='activity.materialname')),
                ('material_unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='activity.materialunit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NextBestHeimabend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('score', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ref', to='activity.activity')),
                ('activity_score', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score', to='activity.activity')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
