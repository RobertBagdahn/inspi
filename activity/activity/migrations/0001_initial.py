# Generated by Django 5.0.6 on 2024-07-12 21:12

import ckeditor.fields
import colorfield.fields
import django.core.validators
import django.db.models.deletion
import imagekit.models.fields
import pictures.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=45, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(40)])),
                ('description', ckeditor.fields.RichTextField(default='', max_length=8000, validators=[django.core.validators.MaxLengthValidator(8000)])),
                ('summary', models.CharField(default='', max_length=100, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('costs_rating', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('execution_time', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('preparation_time', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('difficulty', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('created_by_email', models.CharField(blank=True, max_length=60)),
                ('like_score', models.IntegerField(default=0)),
                ('view_count', models.IntegerField(default=0)),
                ('front_image', pictures.models.PictureField(aspect_ratios=[None], blank=True, breakpoints={'l': 1200, 'm': 992, 's': 768, 'xl': 1400, 'xs': 576}, container_width=1200, file_types=['WEBP'], grid_columns=12, null=True, pixel_densities=[1, 2], upload_to='front_images')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('age_level', models.IntegerField(null=True)),
                ('group_type', models.IntegerField(null=True)),
                ('group_leader', models.IntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar_thumbnail', imagekit.models.fields.ProcessedImageField(upload_to='avatars')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('color', colorfield.fields.ColorField(default='#FF0000', image_field=None, max_length=25, samples=None)),
                ('icon', models.CharField(blank=True, max_length=20, null=True)),
                ('sorting', models.IntegerField(null=True, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TagCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('sorting', models.IntegerField(unique=True)),
                ('icon', models.CharField(blank=True, max_length=20, null=True)),
                ('is_header', models.BooleanField(default=False)),
                ('is_mandatory', models.BooleanField(default=False)),
                ('is_activity_overview', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExperimentItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('score', models.IntegerField(null=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activity.activity')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activity.experiment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('opinion_type_id', models.IntegerField(choices=[(1, 'Like'), (-1, 'Dislike')], default=1)),
                ('like_created', models.DateTimeField(auto_now_add=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activity.activity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('unit_detaults', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='activity.materialunit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('quantity', models.IntegerField(default=0)),
                ('number_of_participants', models.IntegerField(blank=True, default=0)),
                ('activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='material_list', to='activity.activity')),
                ('material_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='activity.materialname')),
                ('material_unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='activity.materialunit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NextBestHeimabend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('score', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ref', to='activity.activity')),
                ('activity_score', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score', to='activity.activity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityOfTheWeek',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('comment', models.CharField(blank=True, max_length=2000, null=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activity.activity')),
                ('tags', models.ManyToManyField(default='', to='activity.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='activity',
            name='tags',
            field=models.ManyToManyField(default='', to='activity.tag'),
        ),
        migrations.AddField(
            model_name='tag',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='activity.tagcategory'),
        ),
    ]
